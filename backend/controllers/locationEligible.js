const asyncHandler = require('express-async-handler');

const postcodes = [3000,3002,3003,3004,3005,3006,3008,3010,3011,3012,3013,3015,3016,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3070,3071,3072,3073,3074,3075,3076,3078,3079,3081,3082,3083,3084,3085,3086,3087,3088,3089,3090,3091,3093,3094,3095,3096,3097,3099,3101,3102,3103,3104,3105,3106,3107,3108,3109,3111,3113,3114,3115,3116,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3158,3159,3160,3161,3162,3163,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,3190,3191,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3204,3205,3206,3207,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3230,3240,3321,3328,3329,3331,3332,3333,3334,3335,3336,3337,3338,3340,3341,3342,3345,3350,3354,3357,3363,3364,3427,3428,3429,3430,3431,3432,3433,3434,3435,3437,3438,3440,3441,3442,3444,3446,3447,3448,3451,3458,3460,3461,3521,3522,3658,3659,3660,3662,3711,3712,3714,3717,3718,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3770,3775,3777,3778,3779,3781,3782,3783,3785,3786,3787,3788,3789,3791,3792,3793,3795,3796,3797,3799,3800,3802,3803,3804,3805,3806,3807,3808,3809,3810,3812,3813,3814,3815,3816,3818,3820,3821,3831,3832,3833,3910,3911,3912,3913,3915,3916,3918,3919,3920,3921,3922,3923,3925,3926,3927,3928,3929,3930,3931,3933,3934,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3975,3976,3977,3978,3979,3980,3981,3984,3987,3988,3990,3991,3992,8008,8012]



const checkEligibility = asyncHandler(async (req, res) => {

    let { address } = req.query;
  
    if (typeof address !== 'string' || address.length > 4 || address.length < 4) {
      return res.status(400).json({ error: 'Invalid address format' });
    }
  
    let addressInt = parseInt(address, 10);

    if (isNaN(addressInt)) {

        return res.status(400).json({ error: 'Address is not a valid postcode' });
    }
    
    const isEligible = postcodes.includes(addressInt) ? 1 : 0;

    res.json({ eligibility: isEligible });
  });




  module.exports = {
    checkEligibility
}





